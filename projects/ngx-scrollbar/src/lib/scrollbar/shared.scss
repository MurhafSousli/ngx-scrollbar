:host {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  min-width: calc(var(--viewport-width) * 1px);
  min-height: calc(var(--viewport-height) * 1px);
}

.ng-scrollbar-sticky {
  top: calc(var(--_scrollbar-wrapper-top) * 1px);
  left: calc(var(--_scrollbar-wrapper-left) * 1px);
  right: calc(var(--_scrollbar-wrapper-right) * 1px);
  height: calc(var(--_scrollbar-wrapper-height) * 1px);
  width: calc(var(--_scrollbar-wrapper-width) * 1px);
  position: sticky;
  z-index: 1;
}

.ng-scrollbar-track {
  // We use the absolute position for the hover effect
  // Set the proper direction of size transition on hover
  top: var(--_scrollbar-track-top);
  bottom: var(--_scrollbar-track-bottom);
  right: var(--_scrollbar-track-right);
  left: var(--_scrollbar-track-left);
  pointer-events: var(--_scrollbar-pointer-events);
  opacity: var(--_scrollbar-opacity);
  background-color: var(--scrollbar-track-color);
  transition: var(--_scrollbar-transition);
  border-radius: var(--scrollbar-border-radius);
  position: absolute;
  cursor: default;
  z-index: 1;
}

.ng-scrollbar-thumb {
  box-sizing: border-box;
  position: absolute;
  transition: var(--scrollbar-thumb-transition);
  border-radius: var(--scrollbar-border-radius);
  height: var(--_thumb-height);
  width: var(--_thumb-width);

  animation-name: scrollbarThumbAnimation;
  animation-duration: 1ms; /* Firefox requires this to apply the animation */
  animation-timing-function: linear;
}

@keyframes scrollbarThumbAnimation {
  from {
    translate: var(--_scrollbar-thumb-transform-from);
  }
  to {
    translate: var(--_scrollbar-thumb-transform-to);
  }
}
