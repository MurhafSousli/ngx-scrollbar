@use "styles/visibility" as visibility;
@use "styles/appearance" as appearance;
@use "styles/position" as position;
@use "styles/viewport" as viewport;
@use "styles/content" as content;
@use "styles/hide-native-scrollbars" as nativeScrollbars;
@use "styles/reached-events" as reachedEvents;
@use "styles/selectors" as selector;
@use "styles/scroll" as scroll;

:host {
  // Host element default styles regardless if its a viewport or not
  display: block;
  position: relative;
  overflow: hidden;
  max-height: 100%;
  max-width: 100%;

  // CSS variables used to customized the look of the scrollbar component

  // Scrollbar track border radius
  --scrollbar-border-radius: 7px;

  // Scrollbar track thickness
  --scrollbar-thickness: 5;

  // Space between scrollbar track and its surrounding
  --scrollbar-offset: 4;

  // Scrollbar track color
  --scrollbar-track-color: transparent;

  // Scrollbar track transition effect
  --scrollbar-track-transition: height ease-out 0.15s, width ease-out 0.15s;

  // Scrollbar thumb color
  --scrollbar-thumb-color: rgba(0, 0, 0, 0.2);

  // Scrollbar thumb color when hovered
  --scrollbar-thumb-hover-color: var(--scrollbar-thumb-color);

  // Scrollbar thickness when hovered
  --scrollbar-hover-thickness: var(--scrollbar-thickness);

  // Scrollbar thumb transition effect
  --scrollbar-thumb-transition: none;

  // The minimum size the scrollbar thumb can get
  --scrollbar-thumb-min-size: 20;

  // Transition config when [visibility]="hover"
  --scrollbar-hover-transition-duration: 0.4s;
  --scrollbar-hover-transition-delay: 0.8s;

  // Viewport overscroll behavior
  // In firefox and safari the scrollbar bounces if viewport is over-scrolled causing the scrollbars to bounce with it
  // It seems that the only way around this is by disabling the overscroll behavior
  // The other option is to give up the sticky scrollbar method and use an absolute position scrollbars
  --scrollbar-overscroll-behavior: initial;

  // Viewport overscroll behavior in case of mobile devices
  --scrollbar-mobile-overscroll-behavior: none;

  /** Scrollbar private CSS variables **/

  --_scrollbar-transition: var(--scrollbar-track-transition);
  --_scrollbar-opacity: initial;

  --_scrollbar-thickness: calc(var(--scrollbar-thickness) + var(--scrollbar-offset) * 2);
  --_scrollbar-pointer-events: auto;

  // Convert margin to px value to avoid repeating calculation when used in multiple times
  --_scrollbar-offset-px: calc(var(--scrollbar-offset) * 1px);
  --_scrollbar-thickness-px: calc(var(--scrollbar-thickness) * 1px);
  --_scrollbar-hover-thickness-px: calc(var(--scrollbar-hover-thickness) * 1px);

  // Initialize viewport and content paddings
  --_viewport-padding-top: 0;
  --_viewport-padding-bottom: 0;
  --_viewport-padding-left: 0;
  --_viewport-padding-right: 0;

  // Scrollbar thumb display used to hide thumbs when scrollbar is not scrollable
  --_horizontal-thumb-display: block;
  --_vertical-thumb-display: block;

  // The default value for overflow
  --_viewport-overflow: auto;

  // Scrollbar thumb color variables used to change when hovered or dragged
  --_thumb-x-color: var(--scrollbar-thumb-color);
  --_thumb-y-color: var(--scrollbar-thumb-color);
  --_track-y-thickness: var(--_scrollbar-thickness-px);
  --_track-x-thickness: var(--_scrollbar-thickness-px);

  // Viewport overscroll behavior
  --_viewport-overscroll-behavior: var(--scrollbar-overscroll-behavior);

  // Content display, will switch to block if orientation is set to vertical
  --_scrollbar-content-width: fit-content;
}

:host {
  @include viewport.SetViewportStyles();
  @include content.SetContentStyles();

  @include nativeScrollbars.HideNativeScrollbars();
  @include position.SetPositionStuff();
  @include appearance.SetAppearanceStuff();
  @include visibility.SetVisibilityStuff();
  @include reachedEvents.SetReachedEventsStyles();
  @include scroll.SetScrollingStyles();

  &[orientation="vertical"] {
    --_viewport-overflow: hidden auto;
    --_scrollbar-content-width: unset;
  }

  &[orientation="horizontal"] {
    --_viewport-overflow: auto hidden;
  }

  &[disableInteraction="true"] {
    --_scrollbar-pointer-events: none;
  }

  &[isVerticallyScrollable="false"] {
    // Hide scrollbars thumb when content is not scrollable
    --_vertical-thumb-display: none;
  }

  &[isHorizontallyScrollable="false"] {
    // Hide scrollbars thumb when content is not scrollable
    --_horizontal-thumb-display: none;
  }

  @include selector.thumbDragging {
    // Disable selection when a scrollbar thumb is being dragged
    --_viewport-user-select: none;
  }

  @include selector.HorizontalUsed {
    // Calculate the horizontal thumb size
    --thumb-x-length: max(calc(var(--viewport-width) * var(--track-x-length) / var(--content-width)), var(--scrollbar-thumb-min-size));
  }

  @include selector.VerticalUsed {
    // Calculate the vertical thumb size
    --thumb-y-length: max(calc(var(--viewport-height) * var(--track-y-length) / var(--content-height)), var(--scrollbar-thumb-min-size));
  }

  @include selector.thumbXDragging {
    --_track-x-thickness: calc(var(--scrollbar-hover-thickness) * 1px);
    --_thumb-x-color: var(--scrollbar-thumb-hover-color);
  }

  @include selector.thumbYDragging {
    --_track-y-thickness: calc(var(--scrollbar-hover-thickness) * 1px);
    --_thumb-y-color: var(--scrollbar-thumb-hover-color);
  }

  @include selector.isMobile {
    --_viewport-overscroll-behavior: var(--scrollbar-mobile-overscroll-behavior);
  }
}
